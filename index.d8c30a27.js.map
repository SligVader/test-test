{"mappings":"AAmWA,MAAMA,EAAOC,SAASC,cAAc,YAC9BC,EAAQF,SAASC,cAAc,aACrC,IAAIE,EAAO,EAOX,IAAIC,EAAW,IAAIC,sBAEnB,SAAgBC,EAASC,GACvBD,EAAQE,SAAQC,IACVA,EAAMC,iBACRP,GAAQ,EACRQ,EAAgBR,GACbS,MAAKC,IACJC,EAAaD,EAAKE,SACdZ,IAASU,EAAKG,KAAKC,OACrBV,EAASW,UAAUhB,EAAM,IAG5BiB,OAAMC,GAAOC,QAAQC,IAAIF,K,MAnBlB,CACdG,KAAM,KACNC,WAAY,QACZC,UAAW,IAqBb,SAASd,EAAgBe,EAAO,GAM9B,OAAOC,MAAM,kDAAoBD,IAJjB,CACdE,OAAQ,QAGwChB,MAAKiB,IACrD,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAEvB,OAAOH,EAAKI,MAAM,G,CAItB,SAASnB,EAAaoB,GACpB,MAAMC,EAASD,EACZE,KACC,EAACC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,EAAMC,QAAEA,EAAOC,KAAEA,KAAW,sBACnCJ,eACTC,eACAC,eACAC,eACAC,kBAGDC,KAAK,IAER3C,EAAK4C,mBAAmB,YAAaR,E,CAGvCxB,IACGC,MAAKC,IACJC,EAAaD,EAAKE,SAClBX,EAASwC,QAAQ1C,EAAM,IAExBiB,OAAMC,GAAOC,QAAQC,IAAIF","sources":["src/index.js"],"sourcesContent":["// const pizzaPalace = {\n//   pizzas: ['Supercheese', 'Smoked', 'Four meats'],\n//   // Change code below this line\n//   checkPizza(pizzaName) {\n//     return this.pizzas.includes(pizzaName);\n//   },\n//   order(pizzaName) {\n//     const isPizzaAvailable = this.checkPizza(pizzaName);\n\n//     if (!isPizzaAvailable) {\n//       return `Sorry, there is no pizza named «${pizzaName}»`;\n//     }\n\n//     return `Order accepted, preparing «${pizzaName}» pizza`;\n//   },\n//   // Change code above this line\n// };\n// console.log(pizzaPalace.order('Smoked'));\n\n// const customer = {\n//   username: 'Mango',\n//   balance: 24000,\n//   discount: 0.1,\n//   orders: ['Burger', 'Pizza', 'Salad'],\n//   // Change code below this line\n//   getBalance() {\n//     return this.balance;\n//   },\n//   getDiscount() {\n//     return this.discount;\n//   },\n//   setDiscount(value) {\n//     this.discount = value;\n//   },\n//   getOrders() {\n//     return this.orders;\n//   },\n//   addOrder(cost, order) {\n//     this.balance -= cost - cost * this.discount;\n//     this.orders.push(order);\n//   },\n//   // Change code above this line\n// };\n\n// customer.setDiscount(0.5);\n// console.log(customer.discount);\n// customer.addOrder(2500, 'Beer');\n// console.log(customer.balance);\n// console.log(customer.orders);\n\n// const parent = {\n//   name: 'Stacey',\n//   surname: 'Moore',\n//   age: 54,\n//   heritage: 'Irish',\n// };\n// // Change code below this line\n\n// const child = Object.create(parent);\n\n// // Change code above this line\n// child.name = 'Jason';\n// child.age = 27;\n// child.herirage = 'Ukrainian';\n// console.log(child);\n\n// const ingredients = [\n//   'Potatoes',\n//   'Mushrooms',\n//   'Garlic',\n//   'Tomatos',\n//   'Herbs',\n//   'Condiments',\n//   'Hicacus',\n// ];\n\n// const createListRef = document.querySelector('#ingredients');\n\n// const ingridientListRef = ingredients.map(ingridient => {\n//   const ingridientRef = document.createElement('li');\n//   ingridientRef.textContent = `${ingridient}`;\n//   ingridientRef.classList.add('item');\n//   return ingridientRef;\n// });\n// createListRef.append(...ingridientListRef);\n\n// const memories = ['Sega', 'Dendy', 'Sony', 'PS1'];\n\n// const createMemoriesListRef = document.querySelector('#memories');\n// const createMemorieListRef = memories.map(memorie => {\n//   const memorieRef = document.createElement('li');\n//   memorieRef.textContent = `${memorie}`;\n//   memorieRef.classList.add('item');\n//   return memorieRef;\n// });\n// createMemoriesListRef.append(...createMemorieListRef);\n\n// const images = [\n//   {\n//     url: 'https://images.pexels.com/photos/140134/pexels-photo-140134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n//     alt: 'White and Black Long Fur Cat',\n//   },\n//   {\n//     url: 'https://images.pexels.com/photos/213399/pexels-photo-213399.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n//     alt: 'Orange and White Koi Fish Near Yellow Koi Fish',\n//   },\n//   {\n//     url: 'https://images.pexels.com/photos/219943/pexels-photo-219943.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n//     alt: 'Group of Horses Running',\n//   },\n// ];\n\n// const createImgGaleryRef = document.querySelector('.gallery');\n\n// const imageGaleryRef = images\n//   .map(\n//     image =>\n//       `<li class=\"gallery__list\"><img class=\"gallery__image\" src=\"${image.url}\" alt = \"${image.alt}\"></li>`\n//   )\n//   .join('');\n// createImgGaleryRef.insertAdjacentHTML('afterbegin', imageGaleryRef);\n// // const li = document.querySelector(\"li\");\n\n// const clickValue = document.querySelector('#value');\n// const decrementBtn = document.querySelector('[data-action=\"decrement\"]');\n// const incrementBtn = document.querySelector('[data-action=\"increment\"]');\n// let counterValue = 0;\n\n// const decreseValue = () => {\n//   counterValue -= 1;\n//   return (clickValue.textContent = counterValue);\n// };\n\n// const increseValue = () => {\n//   counterValue += 1;\n//   return (clickValue.textContent = counterValue);\n// };\n\n// decrementBtn.addEventListener('click', decreseValue);\n// incrementBtn.addEventListener('click', increseValue);\n\n// const textInput = document.querySelector('#name-input');\n// const textOutput = document.querySelector('#name-output');\n\n// const typeInName = event => {\n//   if (event.currentTarget.value !== '') {\n//     textOutput.textContent = event.currentTarget.value;\n//   } else {\n//     textOutput.textContent = 'Anonymous';\n//   }\n// };\n// textInput.addEventListener('input', typeInName);\n\n// const textInput = document.querySelector('.text-input');\n// const setFocusBtn = document.querySelector('[data-action=\"set\"]');\n// const removeFocusBtn = document.querySelector('[data-action=\"remove\"]');\n\n// setFocusBtn.addEventListener('click', () => {\n//   textInput.focus();\n// });\n\n// removeFocusBtn.addEventListener('click', () => {\n//   textInput.blur();\n// });\n\n// textInput.addEventListener('focus', () => {\n//   textInput.value = 'This input has focus';\n// });\n\n// textInput.addEventListener('blur', () => {\n//   textInput.value = '';\n// });\n\n// const inputRef = document.querySelector('#validation-input');\n// const inputLength = Number(inputRef.getAttribute('data-length'));\n\n// const onInputFocus = event => {\n//   if (event.currentTarget.value.length === inputLength) {\n//     inputRef.classList.add('valid');\n//     inputRef.classList.remove('invalid');\n//   } else {\n//     inputRef.classList.remove('valid');\n//     inputRef.classList.add('invalid');\n//   }\n// };\n\n// inputRef.addEventListener('blur', onInputFocus);\n\n// const inputOn = document.querySelector('#validation-input');\n// inputOn.addEventListener('focus', onFocus);\n// function onFocus(event) {\n//   console.log('type in!');\n// }\n\n// inputOn.addEventListener('blur', onBlur);\n// function onBlur(event) {\n//   console.dir(event);\n// }\n// document.addEventListener('keyup', onPress);\n// function onPress(evt) {\n//   evt.preventDefault();\n//   if (evt.ctrlKey && evt.code === 'KeyS') {\n//     alert('Your GrandMa saves less than you!');\n//   }\n\n//   console.dir(evt);\n// }\n\n// const items = [\n//   {\n//     name: 'Kitana',\n//     prod: 'Mcfarlane',\n//     line: 'Mortal Kombat',\n//     img: 'https://mcfarlane.com/wp-content/uploads/2020/09/Kitanna_05.jpg',\n//   },\n//   {\n//     name: 'Baraka',\n//     prod: 'Mcfarlane',\n//     line: 'Mortal Kombat',\n//     img: 'https://mcfarlane.com/wp-content/uploads/2022/04/11072-MORTAL-KOMBAT-7IN-FIGURES-WV9-BARAKA-VARIANT-03_Logos.jpg',\n//   },\n//   {\n//     name: 'Scorpion',\n//     prod: 'Mcfarlane',\n//     line: 'Mortal Kombat',\n//     img: 'https://mcfarlane.com/wp-content/uploads/2020/12/11038_01.jpg',\n//   },\n//   {\n//     name: 'Sub-Zero',\n//     prod: 'Mcfarlane',\n//     line: 'Mortal Kombat',\n//     img: 'https://mcfarlane.com/wp-content/uploads/2019/09/Subzero_Front_CC.jpg',\n//   },\n//   {\n//     name: 'Doom Slayer',\n//     prod: 'Mcfarlane',\n//     line: 'DOOM',\n//     img: 'https://mcfarlane.com/wp-content/uploads/2019/07/DoomSlayer_Posed_CC.jpg',\n//   },\n//   {\n//     name: 'Batman Hush',\n//     prod: 'Mcfarlane',\n//     line: 'DC Multiverse',\n//     img: 'https://mcfarlane.com/wp-content/uploads/2022/12/15266_03_Logos.jpg',\n//   },\n//   {\n//     name: 'Spawn',\n//     prod: 'Mcfarlane',\n//     line: 'Year of Spawn',\n//     img: 'https://mcfarlane.com/wp-content/uploads/2020/05/SpawnMace_01.jpg',\n//   },\n//   {\n//     name: 'Tyranid',\n//     prod: 'Mcfarlane',\n//     line: 'Warhammer',\n//     img: 'https://mcfarlane.com/wp-content/uploads/2021/09/10927_06.jpg',\n//   },\n//   {\n//     name: 'Snake Predator',\n//     prod: 'Neca',\n//     line: 'Predator 2',\n//     img: 'https://necaonline.com/wp-content/uploads/2022/07/51426_UNP_1-scaled.jpg',\n//   },\n// ];\n\n// const form = document.querySelector('.js-search');\n// const list = document.querySelector('.js-list');\n// form.addEventListener('submit', onSearch);\n// console.log(form);\n// function onSearch(evt) {\n//   evt.preventDefault();\n//   const { queryValue, selectValue } = evt.currentTarget.elements;\n//   console.log(queryValue.value);\n//   console.log(selectValue.value);\n\n//   const searchResult = items.filter(item =>\n//     item[selectValue.value].includes(queryValue.value)\n//   );\n//   const markup = searchResult\n//     .map(\n//       ({ name, prod, line, img }) => `<li>\n//     <img src=\"${img}\" alt=\"${name}\" width = \"300\">\n//     <h2>${name}</h2>\n//     <h3>${line}</h3>\n//     <h4>${prod}</h4>\n//     </li>\n//   `\n//     )\n//     .join('');\n//   list.innerHTML = markup;\n// }\n// console.log('form');\n// console.log('why???');\n\n//////////////////////////// pagination\n\n// const list = document.querySelector('.js-list');\n// const load = document.querySelector('.js-load');\n\n// let page = 1;\n// load.addEventListener('click', onLoad);\n\n// function rickAndMortyAPI(page = 1) {\n//   const BASE_URL = 'https://rickandmortyapi.com/api/character';\n//   const options = {\n//     method: 'GET',\n//   };\n\n//   return fetch(`${BASE_URL}?page=${page}`, options).then(resp => {\n//     if (!resp.ok) {\n//       throw new Error(resp.statusText);\n//     }\n//     return resp.json();\n//   });\n// }\n\n// rickAndMortyAPI()\n//   .then(data => {\n//     createMarkup(data.results);\n//     load.hidden = false;\n//   })\n//   .catch(err => console.log(err));\n\n// function createMarkup(arr) {\n//   const markup = arr\n//     .map(\n//       ({ image, name, status, species, type }) => `<li>\n// <image src =\"${image}\"></>\n// <h2>${name}</h2>\n// <h3>${status}</h3>\n// <h4>${species}</h4>\n// <h5>${type}</h5>\n// </li>`\n//     )\n//     .join('');\n\n//   list.insertAdjacentHTML('beforeend', markup);\n// }\n\n// function onLoad() {\n//   page += 1;\n//   rickAndMortyAPI(page)\n//     .then(data => {\n//       createMarkup(data.results);\n//       console.log(data);\n//       console.log(page);\n//       if (page === data.info.pages) {\n//         load.hidden = true;\n//       }\n//     })\n//     .catch(err => console.log(err));\n// }\n\n/////////////////////////////// scroll\n\nconst list = document.querySelector('.js-list');\nconst guard = document.querySelector('.js-guard');\nlet page = 1;\nconst options = {\n  root: null,\n  rootMargin: '300px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(onLoad, options);\n\nfunction onLoad(entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      page += 1;\n      rickAndMortyAPI(page)\n        .then(data => {\n          createMarkup(data.results);\n          if (page === data.info.pages) {\n            observer.unobserve(guard);\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  });\n}\n\nfunction rickAndMortyAPI(page = 1) {\n  const BASE_URL = 'https://rickandmortyapi.com/api/character';\n  const options = {\n    method: 'GET',\n  };\n\n  return fetch(`${BASE_URL}?page=${page}`, options).then(resp => {\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n    return resp.json();\n  });\n}\n\nfunction createMarkup(arr) {\n  const markup = arr\n    .map(\n      ({ image, name, status, species, type }) => `<li>\n<image src =\"${image}\"></>\n<h2>${name}</h2>\n<h3>${status}</h3>\n<h4>${species}</h4>\n<h5>${type}</h5>\n</li>`\n    )\n    .join('');\n\n  list.insertAdjacentHTML('beforeend', markup);\n}\n\nrickAndMortyAPI()\n  .then(data => {\n    createMarkup(data.results);\n    observer.observe(guard);\n  })\n  .catch(err => console.log(err));\n"],"names":["$1f0dc3b9307be026$var$list","document","querySelector","$1f0dc3b9307be026$var$guard","$1f0dc3b9307be026$var$page","$1f0dc3b9307be026$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","$1f0dc3b9307be026$var$rickAndMortyAPI","then","data","$1f0dc3b9307be026$var$createMarkup","results","info","pages","unobserve","catch","err","console","log","root","rootMargin","threshold","page1","fetch","method","resp","ok","Error","statusText","json","arr","markup","map","image","name","status","species","type","join","insertAdjacentHTML","observe"],"version":3,"file":"index.d8c30a27.js.map"}